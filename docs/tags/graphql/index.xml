<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>graphql on Tech Kitchen</title>
    <link>/tags/graphql/</link>
    <description>Recent content in graphql on Tech Kitchen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Oct 2018 20:32:00 +0000</lastBuildDate><atom:link href="/tags/graphql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Composing dynamic queries with ecto</title>
      <link>/post/elixir-dynamic-queries-with-ecto/</link>
      <pubDate>Thu, 18 Oct 2018 20:32:00 +0000</pubDate>
      
      <guid>/post/elixir-dynamic-queries-with-ecto/</guid>
      <description>I was recently working on a project where I needed to compose a dynamic query for filtering a table using ecto. The filter parameters are coming from a graphql resolver.
# ~/query.ex #A sample filter input filter_input = %{status: &amp;#34;AVAILABLE&amp;#34;, genre: &amp;#34;Comedy&amp;#34;, last_update_gte: &amp;#34;2018-10-18 00:00:00&amp;#34;, last_update_lte: &amp;#34;2018-10-18 23:59:59&amp;#34; } #The schema I will be querying defmodule Movies do use Ecto.Schema schema &amp;#34;movies&amp;#34; do field(:genre, :string) field(:status, :string) timestamps() end end #My resolver function defmodule MovieFilter do import Ecto.</description>
    </item>
    
  </channel>
</rss>
