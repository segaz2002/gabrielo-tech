<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Telegram on Tech Kitchen</title>
    <link>/tags/telegram/</link>
    <description>Recent content in Telegram on Tech Kitchen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Dec 2017 21:40:13 -0400</lastBuildDate>
    
	<atom:link href="/tags/telegram/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Elixir Telegram Bot</title>
      <link>/post/elixir-telegram-bot/</link>
      <pubDate>Wed, 27 Dec 2017 21:40:13 -0400</pubDate>
      
      <guid>/post/elixir-telegram-bot/</guid>
      <description>The quest was to develop a telegram bot over 24hrs, during an office hackathon event.
I started out consulting documentation.
Bot interaction was implemented as a GenServer named ConversationTree
defmodule TelegramService.ConversationTree do use GenServer def start_link(name, conversation \\ %{message: [], response: [], tickets: []}) do {:ok, _} = GenServer.start_link(__MODULE__, conversation, name: name) name end def lookup(name) do GenServer.whereis(name) end def kill(name) do GenServer.stop(name) end def write_message(name, message = %{}) do GenServer.</description>
    </item>
    
  </channel>
</rss>